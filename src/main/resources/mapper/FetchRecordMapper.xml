<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.plz.modules.mapper.FetchRecordMapper">
  <resultMap id="BaseResultMap" type="com.plz.modules.model.FetchRecord">
    <result column="t_id" jdbcType="INTEGER" property="id" />
    <result column="t_odd" jdbcType="VARCHAR" property="odd" />
    <result column="t_warehouseId" jdbcType="INTEGER" property="warehouseId" />
    <result column="t_discount" jdbcType="FLOAT" property="discount" />
    <result column="t_other_cost" jdbcType="DOUBLE" property="otherCost" />
    <result column="t_other_costName" jdbcType="VARCHAR" property="otherCostName" />
    <result column="t_paid" jdbcType="DOUBLE" property="paid" />
    <result column="t_accept_paid" jdbcType="DOUBLE" property="acceptPaid" />
    <result column="t_remark" jdbcType="VARCHAR" property="remark" />
    <result column="t_customId" jdbcType="INTEGER" property="customId" />
    <result column="t_signer" jdbcType="VARCHAR" property="signer" />
    <result column="t_receiver" jdbcType="VARCHAR" property="receiver" />
    <result column="t_receiver_phone" jdbcType="VARCHAR" property="receiverPhone" />
    <result column="t_receivedId" jdbcType="INTEGER" property="receiverId" />
    <result column="t_received_address" jdbcType="VARCHAR" property="receivedAddress" />
    <result column="t_received_time" jdbcType="TIMESTAMP" property="receivedTime" />
    <result column="t_deal_time" jdbcType="TIMESTAMP" property="dealTime" />
    <result column="t_state" jdbcType="TINYINT" property="state" />
    <result column="t_create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="warehouseName" jdbcType="VARCHAR" property="warehouseName" />
    <result column="customName" jdbcType="VARCHAR" property="customName" />
    <result column="receiverName" jdbcType="VARCHAR" property="receiverName" />
    <collection property="fetchGoodsRecordList" javaType="java.util.ArrayList" ofType="com.plz.modules.model.FetchGoodsRecord"
                select="com.plz.modules.mapper.FetchGoodsRecordMapper.selectByRecordId" column="{recordId=t_id}"/>
  </resultMap>

  <sql id="Base_Column">
    t_id, t_odd, t_warehouseId, t_discount, t_other_cost, t_other_cost_name, t_paid, t_remark, t_customId,
    t_signer, t_receiver, t_receiver_phone, t_receivedId, t_received_address, t_received_time, t_deal_time,
    t_state, t_create_time
  </sql>

  <select id="list" resultMap="BaseResultMap">
    SELECT
        r.t_id, r.t_odd, r.t_warehouseId, r.t_discount, r.t_other_cost, r.t_other_cost_name,
        r.t_paid, r.t_accept_paid, r.t_remark, r.t_customId, r.t_signer, r.t_receiver, r.t_receiver_phone,
        r.t_receivedId, r.t_received_address, r.t_received_time, r.t_deal_time,
        r.t_state, r.t_create_time, w.t_name AS warehouseName, c.t_name AS customName, cu.t_name AS receiverName
    FROM
        t_fetch_record r
        LEFT JOIN t_warehouse w ON r.t_warehouseId = w.t_id
        LEFT JOIN t_custom c ON r.t_customId = c.t_id
        LEFT JOIN t_custom cu ON r.t_receivedId = cu.t_id
    WHERE 1=1
    <if test="query.warehouseId != null" >
        AND r.t_warehouseId = #{query.warehouseId}
    </if>
    <if test="query.odd != null and query.odd != ''" >
        AND r.t_odd LIKE concat('%', #{query.odd}, '%')
    </if>
    <if test="query.customId != null" >
        AND r.t_customId = #{query.customId}
    </if>
    ORDER BY r.t_create_time DESC
  </select>

  <select id="getAllList" resultMap="BaseResultMap">
    SELECT
      r.t_id, r.t_odd, r.t_warehouseId, r.t_discount, r.t_other_cost, r.t_other_cost_name,
      r.t_paid, r.t_accept_paid, r.t_remark, r.t_customId, r.t_signer, r.t_receiver, r.t_receiver_phone,
      r.t_receivedId, r.t_received_address, r.t_received_time, r.t_deal_time,
      r.t_state, r.t_create_time, w.t_name AS warehouseName, c.t_name AS customName, cu.t_name AS receiverName
    FROM
      t_fetch_record r
      LEFT JOIN t_warehouse w ON r.t_warehouseId = w.t_id
      LEFT JOIN t_custom c ON r.t_customId = c.t_id
      LEFT JOIN t_custom cu ON r.t_receivedId = cu.t_id
      LEFT JOIN t_fetch_goods_record g ON r.t_id = g.t_recordId
    WHERE 1=1
    <if test="query.customIds != null and query.customIds.size > 0">
        AND r.t_customId IN
        <foreach item="item" index="index" collection="query.customIds" open="(" separator="," close=")">
          #{item}
        </foreach>
    </if>
    <if test="query.receiverIds != null and query.receiverIds.size > 0">
        AND r.t_receivedId IN
        <foreach item="item" index="index" collection="query.receiverIds" open="(" separator="," close=")">
          #{item}
        </foreach>
    </if>
    <if test="query.goodsIds != null and query.goodsIds.size > 0">
        AND g.t_goodsId IN
        <foreach item="item" index="index" collection="query.goodsIds" open="(" separator="," close=")">
          #{item}
        </foreach>
    </if>
    <if test="query.startTime != null and query.startTime != ''">
        AND r.t_deal_time &gt;= #{query.startTime}
    </if>
    <if test="query.endTime != null and query.endTime != ''">
      AND r.t_deal_time &lt;= #{query.endTime}
    </if>
    GROUP BY r.t_id, r.t_deal_time
    ORDER BY r.t_deal_time DESC
  </select>

  <update id="deliver">
    UPDATE t_fetch_record SET t_state = 2 WHERE t_id = #{id} AND t_state = 1
  </update>

  <update id="sign">
    UPDATE t_fetch_record SET t_state = 3 WHERE t_id = #{id} AND t_state = 2
  </update>

  <update id="invalid">
    UPDATE t_fetch_record SET t_state = 4 WHERE t_id = #{id}
  </update>

</mapper>